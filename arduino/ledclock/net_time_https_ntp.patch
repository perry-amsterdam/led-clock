--- a/net_time.h
+++ b/net_time.h
@@ -4,6 +4,6 @@
 
 String extractJsonString(const String& json, const String& key);
 void dumpPreview(const String& payload);
-bool fetchTimeInfo(String& tzIana, int& gmtOffsetSec, int& daylightOffsetSec);
+bool fetchTimeInfo(String& tzIana, int& gmtOffsetSec, int& daylightOffsetSec, bool acceptAllHttps = false);
 String fetchCountryCode();
-bool setupTimeFromInternet();
+bool setupTimeFromInternet(bool acceptAllHttps = false);

--- a/net_time.cpp
+++ b/net_time.cpp
@@ -1,5 +1,6 @@
 #include <Arduino.h>
 #include <HTTPClient.h>
+#include <WiFiClientSecure.h>
 #include <time.h>
 #include "net_time.h"
 
@@ -45,10 +46,12 @@
 
 // worldtimeapi.org: timezone (string), raw_offset (seconds), dst_offset (seconds)
 // ip-api.com: countryCode (string)
-bool fetchTimeInfo(String& tzIana, int& gmtOffsetSec, int& daylightOffsetSec)
+bool fetchTimeInfo(String& tzIana, int& gmtOffsetSec, int& daylightOffsetSec, bool acceptAllHttps)
 {
+    WiFiClientSecure client;
+    if (acceptAllHttps) { client.setInsecure(); }
     HTTPClient http;
-    if (!http.begin(URL_TIMEINFO)) {
+    if (!http.begin(client, URL_TIMEINFO)) {
 #ifdef DEBUG_TZ
         Serial.println("[TZ] http.begin failed");
 #endif
@@ -98,15 +101,21 @@
     return cc;
 }
 
-bool setupTimeFromInternet()
+bool setupTimeFromInternet(bool acceptAllHttps)
 {
     String tz;
     int gmt = 0, dst = 0;
-    if (!fetchTimeInfo(tz, gmt, dst)) {
+    if (!fetchTimeInfo(tz, gmt, dst, acceptAllHttps)) {
 #ifdef DEBUG_TZ
         Serial.println("[TZ] fetchTimeInfo failed");
 #endif
-        return false;
+        #ifdef DEBUG_TZ
+        Serial.println("[TZ] worldtimeapi failed â€” fallback to configTzTime for Europe/Amsterdam");
+#endif
+        // POSIX TZ for Europe/Amsterdam (CET/CEST with EU DST rules)
+        configTzTime("CET-1CEST,M3.5.0/2,M10.5.0/3", NTP1, NTP2, NTP3);
+        // continue without returning; we will wait for sync below
+
     }
 
     // Configure NTP using offsets (ESP32 time.h)
