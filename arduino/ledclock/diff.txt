diff --git a/arduino/ledclock/globals.h b/arduino/ledclock/globals.h
index 8627358..f5cf00c 100644
--- a/arduino/ledclock/globals.h
+++ b/arduino/ledclock/globals.h
@@ -7,6 +7,11 @@
 
 #include "config.h"
 
+#if defined(ARDUINO)
+#define millis DO_NOT_USE_millis__use_hal_millis
+#define delay  DO_NOT_USE_delay__use_hal_delay_ms
+#endif
+
 extern Adafruit_NeoPixel pixel;
 extern Preferences prefs;
 extern WebServer server;
diff --git a/arduino/ledclock/ledclock.ino b/arduino/ledclock/ledclock.ino
index f7c467c..19c7ddc 100644
--- a/arduino/ledclock/ledclock.ino
+++ b/arduino/ledclock/ledclock.ino
@@ -8,11 +8,12 @@
 #include "wifi.h"
 #include "net_time.h"
 #include "portal.h"
+#include "hal_time.h"
 
 void setup()
 {
 	Serial.begin(115200);
-	delay(5000);
+	hal_delay_ms(5000);
 	Serial.println("\n[Boot] Start");
 
 	ledBegin(); ledBlue();
@@ -28,7 +29,7 @@ void setup()
 		// >>> HIER: TZ opvragen en NTP instellen bij opstart <<<
 		if(setupTimeFromInternet(/*acceptAllHttps=*/true))
 		{
-			lastPrintMs = millis();
+			lastPrintMs = hal_millis();
 			g_timeReady = true;
 		}
 		else
@@ -54,7 +55,7 @@ void loop()
 	// Periodiek tijd printen (alleen als NTP ok)
 	if(WiFi.status()==WL_CONNECTED && g_timeReady)
 	{
-		unsigned long nowMs = millis();
+		unsigned long nowMs = hal_millis();
 		if(nowMs - lastPrintMs >= TIME_PRINT_INTERVAL_SEC*1000UL)
 		{
 
diff --git a/arduino/ledclock/net_time.cpp b/arduino/ledclock/net_time.cpp
index 21f7adf..aee6799 100644
--- a/arduino/ledclock/net_time.cpp
+++ b/arduino/ledclock/net_time.cpp
@@ -5,6 +5,7 @@
 #include "net_time.h"
 #include <WiFi.h>
 #include "lwip/apps/sntp.h"
+#include "hal_time.h"
 
 // Preview helper for HTTP payloads (guarded by DEBUG_TZ)
 void dumpPreview(const String& payload)
@@ -80,7 +81,7 @@ bool fetchTimeInfo(String& tzIana, int& gmtOffsetSec, int& daylightOffsetSec, bo
 		// Wait 1 second for retry.
 		if (code < 0)
 		{
-			delay(1000);
+			hal_delay_ms(1000);
 		}
 	}
 
@@ -204,7 +205,7 @@ bool setupTimeFromInternet(bool acceptAllHttps)
 			// sntp_init();
 		}
 
-		delay(1000);			 // wait 1 second
+		hal_delay_ms(1000);
 	}
 
 	#ifdef DEBUG_TZ
diff --git a/arduino/ledclock/portal.cpp b/arduino/ledclock/portal.cpp
index f0870c2..52a08ce 100644
--- a/arduino/ledclock/portal.cpp
+++ b/arduino/ledclock/portal.cpp
@@ -4,6 +4,7 @@
 #include <DNSServer.h>
 #include "portal.h"
 #include "status_led.h"
+#include "hal_time.h"
 
 String htmlWrap(const String& body)
 {
@@ -120,7 +121,7 @@ void handleSave()
 	prefs.end();
 	if(DEBUG_NET) Serial.printf("[WiFi] Stored SSID='%s' len(pass)=%u\n", server.arg("ssid").c_str(), server.arg("pass").length());
 	server.send(200,"text/html",htmlWrap("<h1>Opgeslagen \342\234\205</h1><p>Herstart...</p>"));
-	delay(500); ESP.restart();
+	hal_delay_ms(500); ESP.restart();
 }
 
 
@@ -129,7 +130,7 @@ void handleReset()
 	if(DEBUG_NET) Serial.println("[HTTP] GET /reset -> clear creds");
 	prefs.begin(PREF_NS,false); prefs.clear(); prefs.end();
 	server.send(200,"text/html",htmlWrap("<h1>Gewist \342\234\205</h1><p>Herstart...</p>"));
-	delay(500); ESP.restart();
+	hal_delay_ms(500); ESP.restart();
 }
 
 
diff --git a/arduino/ledclock/wifi.cpp b/arduino/ledclock/wifi.cpp
index 50b281f..cb4fc1a 100644
--- a/arduino/ledclock/wifi.cpp
+++ b/arduino/ledclock/wifi.cpp
@@ -4,12 +4,14 @@
 #include "portal.h"
 #include "status_led.h"
 #include "net_time.h"
+#include "hal_time.h"
 
 bool connectWiFi(const String& ssid, const String& pass, uint32_t timeoutMs)
 {
-	if(ssid.isEmpty()){
-		Serial.println("[WiFi] geen opgeslagen SSID"); 
-		return false; 
+	if(ssid.isEmpty())
+	{
+		Serial.println("[WiFi] geen opgeslagen SSID");
+		return false;
 	}
 
 	if(DEBUG_NET) Serial.printf("\r[WiFi] verbinden met SSID='%s'...\n", ssid.c_str());
@@ -18,14 +20,14 @@ bool connectWiFi(const String& ssid, const String& pass, uint32_t timeoutMs)
 
 	WiFi.mode(WIFI_STA);
 	WiFi.disconnect(true,true);
-	delay(50);
+	hal_delay_ms(50);
 	WiFi.begin(ssid.c_str(), pass.c_str());
 
-	uint32_t start=millis(); bool blink=false;
-	while(WiFi.status()!=WL_CONNECTED && (millis()-start)<timeoutMs)
+	uint32_t start=hal_millis(); bool blink=false;
+	while(WiFi.status()!=WL_CONNECTED && (hal_millis()-start)<timeoutMs)
 	{
 		blink=!blink; if(blink) ledBlue(); else ledOff();
-		delay(300); Serial.print('.');
+		hal_delay_ms(300); Serial.print('.');
 	}
 	Serial.println();
 
